#!/bin/sh

# system
PACKAGE='@PACKAGE@'
CFGDIR="@sysconfdir@"
CFGFILE="$CFGDIR/myip.conf"
PKGVARDIR="@pkgvardir@"
LOCKFILE="$PKGVARDIR/myip.lock"
STATEFILE="$PKGVARDIR/myip.state"
LOGDIR="@logdir@"
LOGFILE="$LOGDIR/$PACKAGE.log"

# logging
debug() { echo "myip:DEBUG: $*" | tee -a "$LOGFILE" >&$DEBUGFD; }
die()   { echo "myip:ERROR: $*" | tee -a "$LOGFILE" >&$ERRORFD; exit 1; }

# mail_body
mail_body()
{
	echo "HOSTNAME: `hostname -f`"
	echo "NAME: $NAME"
	echo "DATE: $START_DATE"
	echo "IP: $IP"
}

# main
main()
{
	START_STAMP="`date '+%s'`"
	START_DATE="`date -d \"@$START_STAMP\" '+%Y-%m-%d %H:%M:%S'`"
	START_DAY="`date -d \"@$START_STAMP\" '+%Y-%m-%d'`"
	debug "----------------------------------------------------------------------"
	debug "DATE: $START_DATE"
	# read config
	test -e "$CFGFILE" || die "config file does not exist: '$CFGFILE'"
	. "$CFGFILE" || die "error in config file: '$CFGFILE'"
	test x"${NAME:-}" != x || die "NAME missing in '$CFGFILE'"
	test x"${MAILTO:-}" != x || die "MAILTO missing in '$CFGFILE'"
	: ${MAIL:=Mail}
	# get our current IP
	URL='http://api.hostip.info/get_html.php'
	debug "fetching '$URL'"
	OUT="`wget -nv -O- \"$URL\" 2>>\"$LOGFILE\"`" \
		|| die "could not fetch '$URL'"
	echo "$OUT" | while read LINE; do debug " > $LINE"; done
	# extract and check the ip
	E='s/^[ \t]*[iI][pP][ \t]*:[ \t*]\([0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\)[ \t]*$/\1/;
       t QUIT; b LOOP; :QUIT; p; q; :LOOP;'
	IP="`echo \"$OUT\" | sed --posix -n \"$E\"`"
	test x"$IP" != x || die "IP not found in output"
	debug "got IP: '$IP'"
	# check the current state
	if [ $FORCE -ne 0 ]; then
		debug "force enabled, sending mail"
	elif [ -e "$STATEFILE" ]; then
		STATE="`cat \"$STATEFILE\"`"
		LAST_DAY="`echo \"$STATE\" | cut -d: -f1`"
		LAST_IP="`echo \"$STATE\" | cut -d: -f2`"
		debug "found state: '$LAST_DAY:$IP'"
		if [ x"$LAST_IP" != x"$IP" ]; then
			debug "IP has changed, sending mail"
			logger -tmyip -pinfo "IP has changed: $IP"
		elif [ x"$LAST_DAY" != x"$START_DAY" ]; then
			debug "date has changed, sending mail"
		else
			debug "IP is up to date, bye"
			return 0
		fi
	else
		debug "no state file found, sending mail"
	fi
	# send notification
	debug "sending mail to $MAILTO (using $MAIL)"
	SUBJECT="MYIP_UPDATE - `hostname` - $START_DATE"
	mail_body | "$MAIL" -s "$SUBJECT" $MAILTO \
		|| die "$MAIL failed ($?)"
	# update the statefile
	echo "$START_DAY:$IP" >"$STATEFILE.tmp"
	mv -f "$STATEFILE.tmp" "$STATEFILE"
	# ok
	debug "all done!"
}

# parse the command line
VERBOSE=0
FORCE=0
OPTS="`getopt -n $PACKAGE -o 'vf' -- ${@}`" || die "getopt failed"
eval set -- "$OPTS"
while true; do
	case "$1" in
		-f) FORCE=1; shift;;
		-v) VERBOSE=1; shift;;
		--) shift; break;;
		*) die "oups: opt '$1'";;
	esac
done
# logging setup
exec 3>/dev/null
test $VERBOSE -eq 0 && DEBUGFD=3 || DEBUGFD=2
ERRORFD=2
# run
RMAIN=0
(   flock -n 9 || die "flock failed";
	main;
) 9>>"$LOCKFILE" || RMAIN=$?
exit $RMAIN
