#!/bin/sh

trace() { echo "mysetup: $*" >&2; }
die() { echo "mysetup:FATAL: $*" >&2; exit 1; }

PROGDIR=`dirname $0`
PROGDIR=`readlink -e $PROGDIR`

ADMINUSER='cedric'
ADMINHOME=`getent passwd $ADMINUSER | cut -d: -f6`
test -d "$ADMINHOME" || die "no admin home: '$ADMINHOME'"

PACKAGES='
emacs
emacs-goodies-el
emacs-intl-fonts
python-mode
git
build-essential
libtool
autoconf
autoconf-archive
autoconf-doc
automake
python3
python-mode
notify-osd
vlc
gnome-icon-theme gnome-extra-icons gnome-icon-theme-extras
xchat
exim4
mutt
deborphan

gnome-nettool

grpn
geogebra
blender
gimp gimp-data-extras gimp-dcraw gimp-gutenprint gimp-help-fr gimp-plugin-registry gimp-texturize
audacity
'

EXCLUDE_USERS='nobody'

# list_users
list_users()
{
	local line u
	getent passwd | while read line; do
		local uid=`echo "$line" | cut -d: -f3`
		test $uid -ge 1000 || continue
		local name=`echo "$line" | cut -d: -f1`
		local excl=0
		for u in $EXCLUDE_USERS; do
			test x"$u" != x"$name" || { excl=1; break; }
		done
		test $excl -ne 0 || echo "$name"
	done
}

# _mkdir OWNER MODE DIR
_mkdir()
{
	test -d "$3" || mkdir -vp "$3"
	chown "$1" "$3"
	chmod "$2" "$3"
	ls -ld "$3"
}


adduser "$ADMINUSER" sudo || true
adduser "$ADMINUSER" staff || true
adduser "$ADMINUSER" src || true
groups "$ADMINUSER"

_mkdir root:root 700 /home/root-
_mkdir root:staff 2775 /src
_mkdir root:staff 2775 /build
_mkdir root:staff 2775 /usr/local
_mkdir root:staff 2775 /usr/local/etc
_mkdir root:staff 2775 /var/local
_mkdir root:staff 2775 /var/local/log

# admin
rm -f "$ADMINHOME"/etc
ln -svf /usr/local/etc "$ADMINHOME"/etc
cp -vf "$PROGDIR"/aptclean /root
chmod +x /root/aptclean

# users
for USER in root `list_users`; do
	USERHOME=`getent passwd $USER | cut -d: -f6`
	trace "USER: '$USER' -> '$USERHOME'"
	rm -f "$USERHOME"/.emacs "$USERHOME"/.bash_profile
	ln -svf "$PROGDIR/.emacs" "$USERHOME/.emacs"
	ln -svf "$PROGDIR/.bash_profile" "$USERHOME/.bash_profile"
done

trace "cron setup"
cat >/etc/cron.d/cron-cedric-setup <<EOF
# cron-cedric-setup - installed by mysetup

SHELL=/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

# /root backup
40 * * * * root rsync -a --delete --delete-excluded /root/ /home/root-

# ubuntu fix: chmod +x all desktop files
45 * * * * root find /home -mindepth 2 -maxdepth 2 -type d -name 'Bureau' -exec eval chmod -v +x '{}/*.desktop' ';'

EOF

trace "updating aptitude lists..."
aptitude -q update >/dev/null
trace "installing packages..."
aptitude -q --with-recommends install $PACKAGES
trace "cleaning up packages..."
/root/aptclean

# exim4 config
trace "EXIM4 CONFIG"
echo -n "smtp server (leave blank to skip config): "
read EXIM_SMTP_SERVER
if [ x"$EXIM_SMTP_SERVER" = x ]; then
	trace "exim config skipped"
else
	EXIM_SMTP_PORT='587'
	echo -n "smtp port ($EXIM_SMTP_PORT) : "
	read LINE
	test x"$LINE" = x || EXIM_SMTP_PORT="$LINE"
	EXIM_SMTP_FROM=`echo "$EXIM_SMTP_SERVER" | cut -d. -f2-`
	echo -n "smtp from ($EXIM_SMTP_FROM) :"
	read LINE
	test x"$LINE" = x || EXIM_SMTP_FROM="$LINE"
	echo -n "extra test addresses: "
	read EXIM_TEST_ADDRS
	echo -n "smtp username: "
	read EXIM_USERNAME
	# [FIXME] no echo!!
	echo -n "smtp password: "
	read EXIM_PASSWORD
	EXIM_TEST_ADDRS="root@`hostname -f` $ADMINUSER@`hostname -f` $EXIM_TEST_ADDRS"
	EXIMCONF='/etc/exim4/update-exim4.conf.conf'
	E="s,^\(dc_eximconfig_configtype\)=.*\$,\1='smarthost',g;
       s,^\(dc_other_hostnames\)=.*\$,\1='',g;
       s,^\(dc_local_interfaces\)=.*\$,\1='127.0.0.1 ; ::1',g;
       s,^\(dc_readhost\)=.*\$,\1='$EXIM_SMTP_FROM',g;
       s,^\(dc_relay_domains\)=.*\$,\1='',g;
       s,^\(dc_minimaldns\)=.*\$,\1='false',g;
       s,^\(dc_relay_nets\)=.*\$,\1='',g;
       s,^\(dc_smarthost\)=.*\$,\1='$EXIM_SMTP_SERVER::$EXIM_SMTP_PORT',g;
       s,^\(CFILEMODE\)=.*\$,\1='644',g;
       s,^\(dc_use_split_config\)=.*\$,\1='true',g;
       s,^\(dc_hide_mailname\)=.*\$,\1='true',g;
       s,^\(dc_mailname_in_oh\)=.*\$,\1='true',g;
       s,^\(dc_localdelivery\)=.*\$,\1='mail_spool',g;"
	sed -e "$E" <"$EXIMCONF" >"$EXIMCONF.tmp"
	less "$EXIMCONF.tmp"
	( diff -u "$EXIMCONF" "$EXIMCONF.tmp"; echo "DIFF: $?"; ) | less
	trace "exim config summary:"
	trace "  smtp server: $EXIM_SMTP_SERVER"
	trace "  smtp port:   $EXIM_SMTP_PORT"
	trace "  from addr:   $EXIM_SMTP_FROM"
	trace "  test addrs:  $EXIM_TEST_ADDRS"
	echo -n "is this correct ? (y/N) "
	read Y
	case "$Y" in
		y|Y|yes|YES)
			trace "go..."
			cp -vf --backup=simple "$EXIMCONF" "$EXIMCONF"
			mv -f "$EXIMCONF.tmp" "$EXIMCONF"
			:>/etc/exim4/passwd.client.tmp
			exec </etc/exim4/passwd.client
			while read LINE; do
				SRV=`echo "$LINE" | cut -sd: -f1`
				test x"$SRV" = x"$EXIM_STMP_SERVER" || echo "$LINE" >>/etc/exim4/passwd.client.tmp
			done
			echo "$EXIM_SMTP_SERVER:$EXIM_USERNAME:$EXIM_PASSWORD" >>/etc/exim4/passwd.client.tmp
			mv -f /etc/exim4/passwd.client.tmp /etc/exim4/passwd.client
			chown root:Debian-exim /etc/exim4/passwd.client
			chmod 640 /etc/exim4/passwd.client
			ls -l /etc/exim4/passwd.client
			dpkg-reconfigure exim4-config
			for M in $EXIM_TEST_ADDRS; do
				trace "sending test mail to '$M'"
				echo "TEST" | Mail -s "EXIM CONFIG TEST - `date` - `hostname -f`" "$M" \
					|| trace "ERROR: Mail failed ($?)"
			done
			;;
		*)
			trace "exim config skipped"
	esac
fi

echo "mysetup: all done!"
