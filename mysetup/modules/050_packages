# -*- shell-script -*-

MOD_TITLE='Install packages'

# _mklists
# [FIXME]
_mklists()
{
	# BASE
	cat >"$MOD_TMPDIR/base.list" <<EOF
deborphan
git
openssh-client openssh-server
emacs
emacs-goodies-el
emacs-intl-fonts
python-mode
python3
exim4 mutt
partimage
nfs-common nfs-kernel-server
xdg-user-dirs
pastebinit
EOF
	# PROG
	cat >"$MOD_TMPDIR/prog.list" <<EOF
build-essential
libtool
autoconf
autoconf-archive
automake

autoconf-doc
abs-guide
EOF
	# X-base
	cat >"$MOD_TMPDIR/xbase" <<EOF
xfonts-75dpi xfonts-75dpi-transcoded
xfonts-100dpi xfonts-100dpi-transcoded
xfonts-scalable xfonts-mathml
xfonts-terminus
xfonts-intl-european xfonts-intl-arabic xfonts-intl chinese xfonts-intl-japanese
ttf-mscorefonts-installer
EOF
	# XFCE
	cat >"$MOD_TMPDIR/xfce.list" <<EOF
xfce4 xfce4-goodies
gnome-icon-theme gnome-extra-icons gnome-icon-theme-extras
xchat
exim4
pavucontrol pavumeter
vlc
gnome-nettool
EOF
	# AUDIO
	cat >"$MOD_TMPDIR/audio.list" <<EOF
audacity
soundconverter
libsox-fmt-all
EOF
	# GRAPHISM
	cat >"$MOD_TMPDIR/graphics.list" <<EOF
blender
gimp gimp-data-extras gimp-dcraw gimp-gutenprint gimp-help-fr gimp-plugin-registry gimp-texturize
pitivi
EOF
    # MATHS
	cat >"$MOD_TMPDIR/maths.list" <<EOF
grpn
geogebra
EOF
	# TOYS
	cat >"$MOD_TMPDIR/toys.list" <<EOF
gnome-games
gnome-hearts
eboard eboard-extras-pack1 xboard 3dchess dreamchess
mahjongg mah-jong xmahjongg
mancala
micropolis
frogatto
4digits
knetwalk kmines
atomix
berusky
black-box
einstein
enigma
frozen-bubble
gamazons
glpeces gtans
gmult
gnome-mastermind
gnubik
gnudoq sudoku
golly
gtkballs
gtkboard
gtkpool
jester
lskat
ltris
pyscrabble-server pyscrabble
ri-li
snake4
sopwith
simutrans simutrans-pak64 simutrans-pak128.britain
toppler
tuxmath
tuxpuck
xabacus xmabacus
xbomb xdemineur
xmille
xmountains
xpat2 xsol
aisleriot
EOF
	# GAMES
	cat >"$MOD_TMPDIR/games.list" <<EOF
hatari
glob2
wesnoth
freeciv-server freeciv-client-gtk freeciv-client-sdl
freeciv-client-extras freeciv-sound-standard
freecol
EOF
}

# mod_main
mod_main()
{
	_mklists
	# prepare lists
	find "$MOD_TMPDIR" -mindepth 1 -maxdepth 1 -name '*.list' -exec basename '{}' '.list' ';' | sort >"$MOD_TMPDIR/pkglists"
	NLISTS="`wc -l $MOD_TMPDIR/pkglists | awk '{print $1}'`"
	trace "found $NLISTS lists"
	DLG="dlg \"$MOD_TITLE\" --checklist 'Select lists to install:' 0 0 $NLISTS"
	N=1
	exec 5<&0
	exec <"$MOD_TMPDIR/pkglists"
	while read LINE; do
		DLG="$DLG $N \"$LINE\" on"
		N=$((N+1))
	done
	exec 0<&5
	# run
	R=0; eval "$DLG" || R=$?
	test $R -eq 0 || return $?
	# make package list
	PACKAGES=
	for N in `dlg_out`; do
		LIST="`head -n $N \"$MOD_TMPDIR/pkglists\" | tail -n 1`"
		trace "SELECT: '$LIST'"
		PACKAGES="$PACKAGES `cat $MOD_TMPDIR/$LIST.list`"
	done
	PACKAGES="`for P in $PACKAGES; do echo $P; done | sort -u`"
	PACKAGES="`echo $PACKAGES`"
	NPACKAGES="`echo $PACKAGES | wc -w`"
	trace "selected $NPACKAGES packages:"
	for P in $PACKAGES; do
		trace " - '$P'"
	done
	# go
	clear
	aptitude update
	aptitude keep-all
	aptitude install --schedule-only --with-recommends $PACKAGES
	aptitude
}
